[{"D:\\react\\cloneJS\\src\\index.js":"1","D:\\react\\cloneJS\\src\\components\\header\\header.js":"2","D:\\react\\cloneJS\\src\\components\\menu\\menu.js":"3","D:\\react\\cloneJS\\src\\components\\planner\\Planner.js":"4","D:\\react\\cloneJS\\src\\components\\family\\Family.js":"5","D:\\react\\cloneJS\\src\\components\\receipts\\ReceiptsFull.js":"6","D:\\react\\cloneJS\\src\\components\\storages\\Storages.js":"7","D:\\react\\cloneJS\\src\\components\\ingredients\\Ingredients.js":"8","D:\\react\\cloneJS\\src\\components\\export\\Export.js":"9","D:\\react\\cloneJS\\src\\components\\receipts\\ReceiptModal.js":"10","D:\\react\\cloneJS\\src\\components\\UpdateAll.js":"11","D:\\react\\cloneJS\\src\\components\\modeHeader.js":"12","D:\\react\\cloneJS\\src\\components\\family\\FamilyModes.js":"13","D:\\react\\cloneJS\\src\\components\\WithListLoading.js":"14"},{"size":1370,"mtime":1611927226966,"results":"15","hashOfConfig":"16"},{"size":546,"mtime":1611175564544,"results":"17","hashOfConfig":"16"},{"size":6360,"mtime":1612038763920,"results":"18","hashOfConfig":"16"},{"size":865,"mtime":1611331483922,"results":"19","hashOfConfig":"16"},{"size":850,"mtime":1611236397341,"results":"20","hashOfConfig":"16"},{"size":12094,"mtime":1612004177578,"results":"21","hashOfConfig":"16"},{"size":6218,"mtime":1611957788272,"results":"22","hashOfConfig":"16"},{"size":8300,"mtime":1611958486849,"results":"23","hashOfConfig":"16"},{"size":861,"mtime":1611331447065,"results":"24","hashOfConfig":"16"},{"size":14396,"mtime":1611927176838,"results":"25","hashOfConfig":"16"},{"size":1038,"mtime":1611820450678,"results":"26","hashOfConfig":"16"},{"size":1208,"mtime":1612041110634,"results":"27","hashOfConfig":"16"},{"size":6048,"mtime":1611957802848,"results":"28","hashOfConfig":"16"},{"size":550,"mtime":1611335189942,"results":"29","hashOfConfig":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"f3svxb",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mw3eve","D:\\react\\cloneJS\\src\\index.js",[],["61","62"],"D:\\react\\cloneJS\\src\\components\\header\\header.js",[],"D:\\react\\cloneJS\\src\\components\\menu\\menu.js",[],"D:\\react\\cloneJS\\src\\components\\planner\\Planner.js",[],"D:\\react\\cloneJS\\src\\components\\family\\Family.js",[],"D:\\react\\cloneJS\\src\\components\\receipts\\ReceiptsFull.js",["63"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport Modal from './ReceiptModal';\r\nimport ModeHeader from \"../modeHeader\";\r\nconst PropertiesJson = require(\"../json/properties.json\");\r\nconst DictJson = require(\"../json/dict.json\");\r\nlet favLocal = JSON.parse(localStorage.getItem(\"hgp-favorite\"));\r\nlet menuLocal = JSON.parse(localStorage.getItem(\"hgp-menu\"));\r\nif (!favLocal) favLocal = [];\r\nif (!menuLocal) menuLocal = [];\r\nlet category = [];\r\nlet categoryBlock = [];\r\nlet count = '';\r\n\r\nfunction Receipts() {\r\n  const language = PropertiesJson.language;\r\n  let categoryStr = PropertiesJson.category;\r\n  const [data, setData] = useState([]);\r\n  const [categoriesData, setCategories] = useState([]);\r\n  const [recentsData, setRecents] = useState([]);\r\n  const [favoritesData, setFavorites] = useState([]);\r\n  const [menusData, setMenus] = useState([]);\r\n  const [query, setQuery] = useState('Основные блюда');\r\n  const [menus, setMenusList] = useState(menuLocal);\r\n  const [favorite, setFarvoritesList] = useState(favLocal);\r\n  const [recent, setRecentList] = useState(favLocal);\r\n  const [categoryHeader, setCategoryHeader] = useState(categoryStr);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let ignore = false;\r\n    const serverUrl = PropertiesJson.serverUrl;\r\n    // const favLocal = JSON.parse(localStorage.getItem(\"hgp-favorite\"));\r\n    // const menuLocal = JSON.parse(localStorage.getItem(\"hgp-menu\"));\r\n\r\n    async function fetchData() {\r\n      const categoryUrl = serverUrl + '/rec/cat/';\r\n      const categoryResult = await axios(categoryUrl + query);\r\n      if (!ignore) setData(categoryResult.data);\r\n\r\n      const categoriesResult = await axios(categoryUrl);\r\n      if (!ignore) setCategories(categoriesResult.data);\r\n    }\r\n    fetchData();\r\n    return () => { ignore = true; }\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    let ignore = false;\r\n    const serverUrl = PropertiesJson.serverUrl;\r\n    const popularUrl = serverUrl + '/rec/popular';\r\n\r\n    async function fetchRecents() {\r\n    const recentsResult = await axios(popularUrl);\r\n     if (!ignore) setRecents(recentsResult.data);\r\n    }\r\n      fetchRecents();\r\n    return () => { ignore = true; }\r\n    }, [recent]);\r\n    \r\n\r\n    useEffect(() => {\r\n    let ignore = false;\r\n    const serverUrl = PropertiesJson.serverUrl;\r\n    // const menuLocal = JSON.parse(localStorage.getItem(\"hgp-menu\"));\r\n    async function fetchMenu() {\r\n      const arrayUrl = serverUrl + '/rec/array';\r\n      const menusArr = menus ? menus : [];\r\n      const regExMenu = menusArr.join(\"|\");\r\n      let configMenu = { };\r\n      let menusResult = {data: {}};\r\n      if (regExMenu.length !== 0) {\r\n        configMenu = { el: \"idMeal\", reg: regExMenu, cat: count};\r\n        menusResult = await axios.post(arrayUrl, configMenu);\r\n      }\r\n      if (!ignore) setMenus(menusResult.data);\r\n    }\r\n\r\n    fetchMenu();\r\n\r\n    return () => { ignore = true; }\r\n  }, [menus]);\r\n\r\n    useEffect(() => {\r\n    let ignore = false;\r\n    const serverUrl = PropertiesJson.serverUrl;\r\n    // const favLocal = JSON.parse(localStorage.getItem(\"hgp-favorite\"));\r\n    async function fetchFavorites() {\r\n      const arrayUrl = serverUrl + '/rec/array';\r\n      const favoritesArr = favorite ? favorite : PropertiesJson.favorites;\r\n      const regExFav = favoritesArr.join(\"|\");\r\n      // console.log(regExFav, favoritesArr, regExFav === [] ? true : false)\r\n      let favoritesResult = {data: {}};\r\n      let configFav = {};\r\n      if (regExFav.length !== 0) {\r\n        configFav = { el: \"idMeal\", reg: regExFav};\r\n        favoritesResult = await axios.post(arrayUrl, configFav);\r\n      }\r\n      if (!ignore) setFavorites(favoritesResult.data);\r\n      }\r\n    fetchFavorites();\r\n    return () => { ignore = true; }\r\n  }, [favorite]);\r\n\r\n  // console.log(data, categoriesData)\r\n\r\n  const changeCategory = (e) => { \r\n    // console.log(e.target.innerText); \r\n    setQuery(e.target.innerText);\r\n    setCategoryHeader(e.target.innerText);\r\n    document.querySelector(\".active-category\").classList.remove(\"active-category\");\r\n    e.target.classList.add(\"active-category\");\r\n  };\r\n\r\n  const openModal = (e) => {\r\n    const target = e.target.classList[0]\r\n    const from = e.target.classList[1].split('-')[0]\r\n    \r\n    let receiptSee = {};\r\n    switch (from) {\r\n      case('recent'):\r\n        receiptSee = recentsData[target];\r\n        break;\r\n      case('receipt'):\r\n        receiptSee = category[target];\r\n        break;\r\n      case('favorite'):\r\n        receiptSee = favoritesData[target];\r\n        break;\r\n      case('menue'):\r\n        receiptSee = menusData[target];\r\n        break;\r\n      default:\r\n    }\r\n    if (receiptSee) {\r\n      localStorage.setItem(\"modalSee\", JSON.stringify(receiptSee));\r\n      setShow(true);\r\n    }\r\n  }\r\n\r\n  const closeModal = () => setShow(false);\r\n\r\n  const updateFavorite = (target, favNew) => {\r\n    if (target){\r\n      favNew.push(target);\r\n      const favSet = new Set(favNew);\r\n      favNew = Array.from(favSet);\r\n    }\r\n    localStorage.setItem(\"hgp-favorite\", JSON.stringify(favNew))\r\n    PropertiesJson.favorites = favNew;\r\n    setFarvoritesList(favNew);\r\n  } \r\n\r\n  const updateMenu = (target, menuNew) => {\r\n    if (target){\r\n      menuNew.push(target);\r\n      const menuSet = new Set(menuNew);\r\n      menuNew = Array.from(menuSet);\r\n    }\r\n    localStorage.setItem(\"hgp-menu\", JSON.stringify(menuNew))\r\n    PropertiesJson.menu = menuNew;\r\n    setMenusList(menuNew);\r\n  } \r\n\r\n  const addFavorite = (e) => {\r\n    let favLocal = JSON.parse(localStorage.getItem(\"hgp-favorite\"));\r\n    const target = e.target.classList[0];\r\n    let favNew = favLocal ? favLocal = Array.from(favLocal): [];\r\n    updateFavorite(target, favNew);\r\n  }\r\n\r\n  const removeFavorite = (e) => {\r\n    let favLocal = JSON.parse(localStorage.getItem(\"hgp-favorite\"));\r\n    const target = e.target.classList[0];\r\n    let favNew = favLocal ? favLocal = Array.from(favLocal): [];\r\n    favNew.splice(favNew.indexOf(target), 1);\r\n    if (favNew === []) favNew = ['null']\r\n    updateFavorite(null, favNew);\r\n  }\r\n\r\n  const addMenu = (e) => {\r\n    let menuLocal = JSON.parse(localStorage.getItem(\"hgp-menu\"));\r\n    const target = e.target.classList[0];\r\n    let menuNew = menuLocal ? menuLocal = Array.from(menuLocal): [];\r\n    count = target;\r\n    updateMenu(target, menuNew);\r\n  }   \r\n\r\n  const removeMenu = (e) => {\r\n    let menuLocal = JSON.parse(localStorage.getItem(\"hgp-menu\"));\r\n    const target = e.target.classList[0];\r\n    let menuNew = menuLocal ? menuLocal = Array.from(menuLocal): [];\r\n    menuNew.splice(menuNew.indexOf(target), 1);\r\n    updateMenu(null, menuNew);\r\n  }   \r\n\r\n  let categories = [];\r\n\r\n  categoriesData.forEach((cat, i) => {\r\n       const category0 = cat[0]; \r\n        const activeClassName = category0 + \" category-name active-category\"\r\n        const categoryClassName = category0 + \" category-name\"\r\n        const catClassName = category0 === categoryStr ?  activeClassName : categoryClassName;\r\n        categories.push(\r\n          <div key={i} className='list-item'>\r\n            <div onClick={changeCategory} className={catClassName}>{category0}</div>\r\n            {/* <div className='category-qty'>{cat[1]}</div> */}\r\n          </div>);\r\n  })\r\n\r\n  const recentsArr = [];\r\n  recentsData.forEach((rec, i) => {\r\n    const clasRN = i + \" recent\";\r\n    const clasRM = i + \" recent-meal\";\r\n    const clasRB = i + \" recent-buttons\";\r\n    const clasFvr =  rec.idMeal + \" recent-favorite material-icons\";\r\n    const clasAdd =  rec.idMeal + \" recent-add material-icons\";\r\n\r\n    recentsArr.push(<div key={rec.idMeal} className={ clasRN } >\r\n      <div className={clasRB}>\r\n        <div onClick={addMenu} className={clasAdd}>add_circle</div>\r\n        <div onClick={addFavorite} className={clasFvr}>favorite_border</div>\r\n      </div>\r\n      <div onClick={openModal} className={clasRM}>{rec.strMeal}</div>\r\n    </div>)\r\n  })\r\n\r\n  const favoritesArr = [];\r\n  if (favoritesData.length > 0) {\r\n  favoritesData.forEach((rec, i) => {\r\n    if (rec === 'null') return;\r\n    const clasRN = i + \" favorite\";\r\n    const clasRM = i + \" favorite-meal\";\r\n    const clasRB = i + \" favorite-buttons\";\r\n    const clasFvr =  rec.idMeal + \" favorite-favorite material-icons\";\r\n    const clasAdd =  rec.idMeal + \" favorite-add material-icons\";\r\n\r\n    favoritesArr.push(<div key={rec.idMeal} className={ clasRN } >\r\n      <div className={clasRB}>\r\n        <div onClick={addMenu} className={clasAdd}>add_circle</div>\r\n        <div onClick={removeFavorite} className={clasFvr}>favorite</div>\r\n      </div>\r\n      <div onClick={openModal} className={clasRM}>{rec.strMeal}</div>\r\n    </div>)\r\n  })\r\n  }\r\n\r\n  const empty = (<div className=\"menue-meal empty\">{DictJson[language].emptyHere}</div>);\r\n\r\n  const menusArr = [];\r\n  if (menusData.length > 0) {\r\n  menusData.forEach((rec, i) => {\r\n    const clasRN = i + \" menue\";\r\n    const clasRM = i + \" menue-meal\";\r\n    const clasRB = i + \" menue-buttons\";\r\n    const clasFvr =  rec.idMeal + \" menue-favorite material-icons\";\r\n    const clasAdd =  rec.idMeal + \" menue-add material-icons\";\r\n\r\n    menusArr.push(<div key={rec.idMeal} className={ clasRN } >\r\n      <div className={clasRB}>\r\n        <div onClick={removeMenu} className={clasAdd}>remove_circle</div>\r\n        <div onClick={addFavorite} className={clasFvr}>favorite_border</div>\r\n      </div>\r\n      <div onClick={openModal} className={clasRM}>{rec.strMeal}</div>\r\n    </div>)\r\n  })\r\n  }\r\n\r\n  const setCategory = (searchExp, categoryData) => {\r\n    if (!searchExp) category = categoryData;\r\n    else {\r\n    category = categoryData.filter(rec => rec.strMeal.includes(searchExp.toLowerCase()))\r\n    }\r\n    // console.log(searchExp, category.length)\r\n    categoryBlock = category.map((rec, i) => {\r\n        const clasNm =  i + \" receipt\";\r\n        const clasNM =  i + \" receipt-meal\";\r\n        const clasNS =  i + \" receipt-see\";\r\n        const clasNB =  i + \" receipt-buttons\";\r\n        const clasFvr =  rec.idMeal + \" receipt-favorite material-icons\";\r\n        const clasAdd =  rec.idMeal + \" receipt-add material-icons\";\r\n\r\n        const divStyle = {\r\n           backgroundImage: 'url(' + rec.strMealThumb + ')',\r\n              };\r\n        return (\r\n          <div style={divStyle} key={rec.idMeal} className={ clasNm } >\r\n            <div className={clasNB}>\r\n            <div onClick={addMenu} className={clasAdd}>add_circle</div>\r\n            <div onClick={addFavorite} className={clasFvr}>favorite_border</div>\r\n            </div>\r\n            <div onClick={openModal} className={clasNS}></div>\r\n            <div className={clasNM}>{rec.strMeal}</div>\r\n            </div>\r\n        )} )\r\n      }\r\n  \r\n  setCategory(null, data)\r\n\r\n  return (\r\n    <div id='receipts' className='receipts'>\r\n      <ModeHeader mode={ 'receipts' }/>\r\n      <div className=\"content\" >\r\n      <div className='categories'>\r\n        <div className=\"categories-wrapper\">\r\n           <div className='categories-list'>\r\n             {categories}\r\n           </div>\r\n        </div>\r\n      </div>\r\n    <div id='category' className='category'>\r\n    <div className=\"category-header\">{ categoryHeader }\r\n      {/* <input onChange={e => setCategory(e.target.value, data)} /> */}\r\n    </div>\r\n    <div className='category-content'>\r\n        {categoryBlock}\r\n      </div>\r\n      </div>\r\n    <div className=\"menus\">\r\n    <div className=\"menus-header\">{DictJson[language].menu}</div>\r\n      <div className=\"menus-content\">\r\n      {menusArr.length > 0 ? menusArr : empty }\r\n      </div>\r\n    </div>\r\n    <div className=\"recents\">\r\n    <div className=\"recents-header\">{DictJson[language].popular}</div>\r\n      <div className=\"recents-content\">\r\n      {recentsArr}\r\n      </div>\r\n    </div>\r\n    <div className=\"favorites\">\r\n    <div className=\"favorites-header\">{DictJson[language].favorites}</div>\r\n      <div className=\"favorites-content\">\r\n      {favoritesArr.length > 0 ? favoritesArr : empty }\r\n      </div>\r\n    </div>\r\n    </div>\r\n    <Modal closeModal={closeModal} show={show}/>\r\n    </div>\r\n  );\r\n}\r\nexport default Receipts;","D:\\react\\cloneJS\\src\\components\\storages\\Storages.js",[],"D:\\react\\cloneJS\\src\\components\\ingredients\\Ingredients.js",[],"D:\\react\\cloneJS\\src\\components\\export\\Export.js",[],"D:\\react\\cloneJS\\src\\components\\receipts\\ReceiptModal.js",[],"D:\\react\\cloneJS\\src\\components\\UpdateAll.js",[],"D:\\react\\cloneJS\\src\\components\\modeHeader.js",[],"D:\\react\\cloneJS\\src\\components\\family\\FamilyModes.js",[],"D:\\react\\cloneJS\\src\\components\\WithListLoading.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":27,"column":18,"nodeType":"70","messageId":"71","endLine":27,"endColumn":31},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'setRecentList' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]